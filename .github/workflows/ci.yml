name: ci-cd

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true

      - name: Go build & test
        run: |
          cd services/api && go build ./...
          cd ../worker && go build ./...
          cd ../.. && make test

      - name: Docker meta (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/taskqueue-api
            ghcr.io/${{ github.repository_owner }}/taskqueue-worker
          tags: |
            type=sha,format=short
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v6
        with:
          context: ./services/api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push Worker image
        uses: docker/build-push-action@v6
        with:
          context: ./services/worker
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/taskqueue-worker:latest
            ghcr.io/${{ github.repository_owner }}/taskqueue-worker:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
